DROP TABLE TICKET_CATEGORIES;
DROP TABLE TICKETS;
DROP TABLE TICKET_QUANTITY;

DROP TABLE EVENTS;
DROP TABLE EVENT_DETAILS;
DROP TABLE LOCATIONS;
DROP TABLE COUNTRIES;
DROP TABLE CITIES;
DROP TABLE ADDRESSES;

DROP TABLE USER_CREDENTIALS;
DROP TABLE ORGANIZER_DATA;
DROP TABLE CLIENT_DATA;

DROP TABLE CLIENT_ORDER;
DROP TABLE COMPANIES;


-------------
-- TICKETS
-------------

CREATE TABLE "Z01"."TICKET_CATEGORIES" 
(	category_id INT GENERATED BY DEFAULT AS IDENTITY,
    category_name VARCHAR2(30) NOT NULL,
    sector CHAR(2)
);

CREATE TABLE "Z01"."TICKET"
(	
    ticket_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    seat VARCHAR2(10) NOT NULL,
    event_id INT NOT NULL,
    ticekt_category_id INT NOT NULL,
    purchase_date DATE
);

CREATE TABLE "Z01"."CLIENT_ORDER"
(	
    order_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    customer_id INT NOT NULL, 
    order_time TIMESTAMP,
    total_price DECIMAL(10, 2) NOT NULL,
    discount DECIMAL(10, 2),
    final_price DECIMAL(10, 2) NOT NULL
);


ALTER TABLE "Z01"."TICKET_CATEGORIES" ADD CONSTRAINT TicketCategoryPK PRIMARY KEY (category_id);
ALTER TABLE "Z01"."TICKET_CATEGORIES" ADD CONSTRAINT CheckCategoryName check
            (category_name in ('Children', 'Adults', 'VIP'));
ALTER TABLE "Z01"."TICKETS" ADD CONSTRAINT EventFK FOREIGN KEY (event_id)
            REFERENCES "Z01"."EVENTS" (event_id) ENABLE;
ALTER TABLE "Z01"."TICKETS" ADD CONSTRAINT TicketCategoryFK FOREIGN KEY (category_id)
            REFERENCES "Z01"."TICKETCATEGORIES" (category_id) ENABLE;

-------------
-- EVENTS
-------------

CREATE TABLE "Z01"."EVENTS" 
(
    event_id INT GENERATED BY DEFAULT AS IDENTITY,
    organizer_id INT,
    --- DATA
    event_name VARCHAR2(50) NOT NULL,
    event_detail_id INT
);

CREATE TABLE "Z01"."EVENT_DETAILS" 
(	event_detail_id INT GENERATED BY DEFAULT AS IDENTITY,
    --- DATA
    name VARCHAR2(40) NOT NULL,
    location_id INT NOT NULL,
    start_time DATE NOT NULL,
    ticket_quantity_id INT
    --end_time DATE NOT NULL
    --description VARCHAR(40) NOT NULL
);

CREATE TABLE "Z01"."TICKET_QUANTITY" 
(
    ticket_quantity_id INT GENERATED BY DEFAULT AS IDENTITY,
    --- DATA
    category_name VARCHAR2(30) NOT NULL,
    sector CHAR(2) NOT NULL,
    quantity INT
    --end_time DATE NOT NULL
    --description VARCHAR(40) NOT NULL
);

CREATE TABLE "Z01"."LOCATIONS" 
(
    location_id INT GENERATED BY DEFAULT AS IDENTITY,
    country_id INT NOT NULL
);

CREATE TABLE "Z01"."COUNTRIES" 
(
    country_id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(20) NOT NULL,
    city_id INT NOT NULL
);

CREATE TABLE "Z01"."CITIES" 
(
    city_id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(20) NOT NULL,
    address_id INT NOT NULL
);

CREATE TABLE "Z01"."ADDRESSES" 
(
    address_id INT GENERATED BY DEFAULT AS IDENTITY,
    address VARCHAR(40) NOT NULL
);

--ALTER TABLE "Z01"."EVENTS" ADD CONSTRAINT EventIDPK PRIMARY KEY (event_id);
--ALTER TABLE "Z01"."EVENTINFORMATIONS" ADD CONSTRAINT EventInformationPK PRIMARY KEY (event_information_id);
--ALTER TABLE "Z01"."EVENTS" ADD CONSTRAINT OrganizerIDFK FOREIGN KEY (organizer_id)
--            REFERENCES "Z01"."ORGANIZERDATA" (organizer_id) ENABLE;
-------------
-- USER CREDENTIALS
-------------
   
CREATE TABLE "Z01"."USER_CREDENTIALS"
(   
    user_id INT GENERATED BY DEFAULT AS IDENTITY,
    account_type CHAR NOT NULL,
    login VARCHAR2(30) NOT NULL,
    password VARCHAR2(30) NOT NULL
);

-------------
-- USER USER DATA
-------------

CREATE TABLE "Z01"."ORGANIZER_DATA"
(
    organizer_id INT,
    name VARCHAR2(20) NOT NULL,
    surname VARCHAR2(30) NOT NULL,
    company_id INT,
    email VARCHAR2(30) NOT NULL,
    telephone INT NOT NULL,
    date_registered DATE,
    constraint CheckTelephone
    CHECK(telephone >= 100000000 and telephone < 1000000000)
);

CREATE TABLE "Z01"."COMPANIES"
(
    comapny_id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR2(20) NOT NULL
);

CREATE TABLE "Z01"."CLIENT_DATA"
(
    client_id INT,
    name VARCHAR2(20) NOT NULL,
    surname VARCHAR2(30) NOT NULL,
    email VARCHAR2(30) NOT NULL,
    birth_date DATE,
    gender CHAR(1),
    credential_id INT,
    telephone INT NOT NULL,
    constraint CheckTelephone
    CHECK(telephone >= 100000000 and telephone < 1000000000)
);

--ALTER TABLE "Z01"."PARTICIPANTDATA" ADD CONSTRAINT CheckGenderParticipantData CHECK (gender IN ('K', 'M', 'N')) ENABLE;

-------------
-- USER USER DATA
-------------

CREATE TABLE "Z01"."EXPECTED_INCOME"
(
    organizer_id NUMBER,
    event_id NUMBER,
    expected_income DECIMAL(10, 2)
);
-- TABELA , ktora potencjalny zysk dla kazdego organiatora
-- automatyczny wyzwaacz gdy zostanie kupiony jeden? bilet



